name: CI

on: [push, pull_request]

env:
  SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
  SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  MAVEN_ARGS: -V -B --no-transfer-progress -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.httpconnectionManager.ttlSeconds=120

jobs:
  test_jdk:
    strategy:
      fail-fast: false
      matrix:
        java: [17, 21]
    name: 'Linux JDK ${{ matrix.java }}'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Set up JDK'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: ${{ matrix.java }}
      - name: 'Test'
        run: ./mvnw ${MAVEN_ARGS} -Djacoco.skip=true install -DskipDistribution=true
  linux:
    name: 'Linux JDK 11'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Set up JDK 11'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - name: 'Test'
        run: ./mvnw ${MAVEN_ARGS} install
      - name: 'Generate coverage report'
        run: ./mvnw jacoco:report
      - name: 'Upload coverage to Codecov'
        uses: codecov/codecov-action@v2
      - name: 'Publish Snapshots'
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'mapstruct/mapstruct'
        run: ./mvnw -s etc/ci-settings.xml -DskipTests=true -DskipDistribution=true deploy
  linux-jdk-8:
    name: 'Linux JDK 8'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Set up JDK 11 for building everything'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - name: 'Install Processor'
        run: ./mvnw ${MAVEN_ARGS} -DskipTests install -pl processor -am
      - name: 'Set up JDK 8 for running integration tests'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 8
      - name: 'Run integration tests'
        run: ./mvnw ${MAVEN_ARGS} verify -pl integrationtest
  windows:
    name: 'Windows'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: 'Set up JDK 11'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - name: 'Test'
        run: ./mvnw %MAVEN_ARGS% install
  mac:
    name: 'Mac OS'
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: 'Set up JDK 11'
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 11
      - name: 'Test'
        run: ./mvnw ${MAVEN_ARGS} install
